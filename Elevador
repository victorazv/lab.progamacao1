#include<stdio.h>
#include<stdlib.h>
#define TAM 6
//Simular elevador
//Vetor >> Cada indice é um andar
//Se o elevador está
int eleA[TAM], eleB[TAM], t, andarA, andarB;
//Para não dar erro. 
//TAM = TAM - 1;
int iniciaElevador(){
    int i;
    for(i=0; i<TAM; i++){
        eleA[i] = 0;
        eleB[i] = 0;
    }
    eleA[0] = 1;
    eleB[0] = 1;
    andarA  = 0; 
    andarB  = 0;
}
int mudaAndar(){
    int desejado, cA, cB;
    cA = 0;
    cB = 0;
    printf("\nDigite o andar desejado:");
    scanf("%d", &desejado);
    if((desejado >= 0 ) && (desejado<=TAM)){
        if(eleA[desejado] == 1){
            printf("O elevador A esta no andar desejado.\n");
        }
        else if(eleB[desejado] == 1){
            printf("O elevador B esta no andar desejado.\n");
        }
        else{
            //verifica qual elevador esta mais perto do destino
            cA = desejado - andarA;
            cB = desejado - andarB;
            if(cA > cB){
                eleA[andarA] = 0;//O elevador não esta mais no andar anterior
                andarA = desejado;//atualiza o andar do elevador
                eleA[desejado] = 1;//O elevador esta no andar desejado
                printf("\nO elevador A foi ate o %d andar.", desejado);
            }
            else{
                eleB[andarB] = 0;//O elevador não esta mais no andar anterior
                andarB = desejado;//atualiza o andar do elevador
                eleB[desejado] = 1;//O elevador esta no andar desejado
                printf("\nO elevador B foi ate o %d andar.", desejado);
            }
        }
    }
    else{
        printf("\nO andar desejado nao existe");
    }
}
int main(){
    int i;
    iniciaElevador();
    
    printf("Elevador de 5 andares. Para ir ao terreo, digite 0.\n");
    printf("----------");
    for(i=0; i<TAM; i++){
        printf("|         |\n");
        printf("| Andar %d |\n", i);
        printf("----------");
        printf("|         |\n");
    }
    printf("----------");
    while(1 == 1){
        mudaAndar();
    }
    return 0;   
}
